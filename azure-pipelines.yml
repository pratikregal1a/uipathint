trigger:
  - none

pool:
   vmImage: 'windows-latest'

# variables:
#   - group: DEV

stages:
  # - stage: Build
  #   displayName: Build Package
  #   jobs: 
  #   - job: BuildPackage
  #     steps:    
  #     - task: UiPathPack@2
  #       inputs:
  #         versionType: 'AutoVersion'
  #         projectJsonPath: '$(System.DefaultWorkingDirectory)/project.json'
  #         outputType: 'Process'
  #         orchestratorConnection: 'UiPath Connection'
  #         outputPath: '$(Build.ArtifactStagingDirectory)'
  #     - publish: $(Build.ArtifactStagingDirectory)
  #       artifact: drop

  # # - stage: Assest
  # #   displayName: Create Assests
  # #   jobs:
  # #     - job: CreateAssests
  # #       steps:
  # #       - task: UiPathAssets@2
  # #         inputs:
  # #           orchestratorConnection: 'UiPath Connection'
  # #           folderName: 'shared'
  # #           assetActionType: 'Deploy'
  # #           csvFile: '$(System.DefaultWorkingDirectory)/Data/Assests.csv'

  # - stage: Deploy
  #   displayName: Deploy build artifact
  #   dependsOn: Build
  #   condition: succeeded()
  #   jobs:
  #     - deployment: deployDEV
  #       displayName: Deploy package to Orchestrator
  #       environment: Dev
  #       strategy:
  #        runOnce:
  #         deploy:
  #          steps:
  #           - task: UiPathDeploy@2
  #             inputs:
  #               orchestratorConnection: 'UiPath Connection'
  #               packagesPath: '$(Pipeline.Workspace)/drop/'
  #               folderName: 'TargetProject'
                
  # - stage: WorkflowAnalyser
  #   displayName: RunWorkflow Analyser
  #   dependsOn: Build
  #   condition: succeeded()
  #   jobs:
  #       - job: WorkflowAnalyser
  #         displayName: AnalyseProject Using Workflow Cli
  #         steps:
  #         - task: PowerShell@2
  #           inputs:
  #             targetType: filePath
  #             filePath: $(Build.SourcesDirectory)\Data\Workflow-Analyzer-CLI-Script
  #             arguments: > # Use this to avoid newline characters in multiline string
  #               -ProjectFilePath $(Build.SourcesDirectory)\project.json
  #               -ExecutableFilePath "C:\Users\prasa\AppData\Local\UiPath\app-21.4.4\UiPath.Studio.CommandLine.exe"
  #               -OutputFilePath '$(Pipeline.Workspace)\drop\Workflow-Analysis.json'
  #             workingDirectory: $(Build.SourcesDirectory)
  #           displayName: 'Analyse Project'

  # - stage : CodeQuality
  #   displayName: Check Code Analysis
  #   dependsOn: Build
  #   condition: succeeded()
  #   jobs:
  #     - job : CodeQuality
  #       steps:
  #         - task: SonarCloudPrepare@1
  #           inputs:
  #             SonarCloud: 'Sonar'
  #             organization: 'rpabotsworld'
  #             scannerMode: 'CLI'
  #             configMode: 'manual'
  #             cliProjectKey: 'rpabotsworld_UiPathAzureDevOpsExample'
  #             cliProjectName: 'UiPathAzureDevOpsExample'
  #             cliSources: '.'
  #         - task: SonarCloudAnalyze@1
  #         - task: SonarCloudPublish@1
  #           inputs:
  #             pollingTimeoutSec: '300'


  - stage: Test
    displayName:  Test After Publish
    #dependsOn: Deploy
    #condition: succeeded()
    jobs:
      - job: Test
        steps:
          - task: UiPathTest@2
            inputs:
              testTarget: 'TestProject'
              orchestratorConnection: 'UiPath Connection'
              #testSet: 'UiPathAzureDevOps_Tests'
              folderName: 'TargetProject'
              testReportDestination: '$(Pipeline.Workspace)/drop/'

